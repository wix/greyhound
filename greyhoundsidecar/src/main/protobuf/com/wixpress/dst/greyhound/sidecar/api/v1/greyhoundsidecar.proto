syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.wixpress.dst.greyhound.sidecar.api.v1";

import "google/protobuf/wrappers.proto";

package com.wixpress.dst.greyhound.sidecar.api.v1;

service GreyhoundSidecar {
  rpc Register(RegisterRequest) returns (RegisterResponse);

  rpc Produce (ProduceRequest) returns (ProduceResponse);
  rpc CreateTopics (CreateTopicsRequest) returns (CreateTopicsResponse);
  rpc StartConsuming (StartConsumingRequest) returns (StartConsumingResponse);
  // in the future:
  // batch produce, batch consume, retry policies, more consumer features
  // handling failures/restarts - keep-alive, re-subscribing consumers
}

message RegisterRequest {
  string host = 1;
  string port = 2;
}

message RegisterResponse {
  string registration_id = 1;
}

message StartConsumingRequest {
  repeated Consumer consumers = 2;
}

message Consumer {
  string id = 1;
  string group = 2;
  string topic = 3;
  oneof RetryStrategy {
    NoRetry no_retry = 4;
    BlockingRetry blocking = 5;
    NonBlockingRetry non_blocking = 6;
  }
}

message NoRetry {
}

message BlockingRetry {
  int32 interval = 1;
}

message NonBlockingRetry {
  repeated int32 intervals = 1; // a retry topic will be created for each interval. intervals in milliseconds
  google.protobuf.Int32Value partitions = 2; // amount of partitions for each created retry topic
}

message StartConsumingResponse {
}

message ProduceRequest {
  string topic = 1;
  google.protobuf.StringValue payload = 2;
  oneof Target {
    string key = 3;
  }
  map<string, string> custom_headers = 4;
}

message ProduceResponse {

}

message CreateTopicsRequest {
  repeated TopicToCreate topics = 1;
}

message TopicToCreate {
  string name = 1;
  google.protobuf.Int32Value partitions = 2;
}

message CreateTopicsResponse {

}
